# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
# spring.datasource.driverClassName = com.mysql.jdbc.Driver
# spring.datasource.url = jdbc:mysql://localhost/spring_auth
# spring.datasource.username = root
# spring.datasource.password = 


#spring.data.mongodb.database=admin
#spring.data.mongodb.username=admin
#spring.data.mongodb.password=adminpassword
#spring.data.mongodb.host=ec2-54-167-126-183.compute-1.amazonaws.com
#spring.data.mongodb.port=27017

spring.data.mongodb.database=printshopdb
spring.data.mongodb.username=printshop
spring.data.mongodb.password=printshop@123
spring.data.mongodb.host=10.182.208.35
spring.data.mongodb.port=27018

spring.profiles.active=mongo

#spring.datasource.url=jdbc:postgresql://localhost:5432/spring-boot-jpa-mongo-exemple
#spring.datasource.username=postgres
#spring.datasource.password=postgres

#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#spring.data.mongodb.uri=mongodb://10.182.208.35:27018/printshopdb



# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = update

# Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#server Context name & path 
server.context-path=/authservice
server.port=9999
